decisionplot <- function(model, data, class = NULL, predict_type = "class",                         resolution = 100, showgrid = TRUE, ...) {    if(!is.null(class)) cl <- data[,class] else cl <- 1  data <- data[,1:2]  k <- length(unique(cl))    plot(data, col = as.integer(cl)+1L, pch = as.integer(cl)+1L, ...)    # make grid  r <- sapply(data, range, na.rm = TRUE)  xs <- seq(r[1,1], r[2,1], length.out = resolution)  ys <- seq(r[1,2], r[2,2], length.out = resolution)  g <- cbind(rep(xs, each=resolution), rep(ys, time = resolution))  colnames(g) <- colnames(r)  g <- as.data.frame(g)    ### guess how to get class labels from predict  ### (unfortunately not very consistent between models)  p <- predict(model, g, type = predict_type)  if(is.list(p)) p <- p$class  p <- as.factor(p)    if(showgrid) points(g, col = as.integer(p)+1L, pch = ".")    z <- matrix(as.integer(p), nrow = resolution, byrow = TRUE)  contour(xs, ys, z, add = TRUE, drawlabels = FALSE,          lwd = 2, levels = (1:(k-1))+.5)    invisible(z)}


##將資料縮小（只留下預測變數跟目標變數）
library(MASS)XXX<-train.transformed[c(13,14,16)]XXX<-as.data.frame(XXX)model <- qda(width~快車道數量+尖峰小時交通量PCU, data = XXX)decisionplot_ggplot(model, XXX, class = "width")